version: '1.0'
steps:

  build_step:
    type: build
    dockerfile: Dockerfile
    image-name: demochat
    tag: ${{CF_BRANCH}}

#  unit_tests:
#    image: ${{build_step}}
#    fail-fast: false
#    commands:
#      - sh -c './services/aws/setvars-stage.sh && ./services/aws/deploy.sh'
#    commands:
#      - npm install
#      - gulp test
#
  integration_step:
    type: composition
    composition:
      version: '3'
      services:
        app:
          image: ${{build_step}}
          links:
            - mongo
          ports:
            - 5000
          healthcheck:
            test: ["CMD", "wget", "-q", "http://localhost:5000/"]
            interval: 1m30s
            timeout: 10s
            retries: 3
        mongo:
          image: mongo
    composition-candidates:
      main:
        image: alpine:3.5
        command: sh -c "for i in 1 2 3 4 5; do wget -s -q http://app:5000/ && break || sleep 20; done && wget -s -q http://app:5000/" | echo 'works'
#
#  deploy_to_ecs:
#      image: codefresh/cf-deploy-ecs
#      commands:
#        - cfecs-update --image-name demochat --image-tag ${{CF_BRANCH}} eu-west-1 demochat-cluster demochat-webapp
#      environment:
#        - AWS_ACCESS_KEY_ID=${{AWS_ACCESS_KEY_ID}}
#        - AWS_SECRET_ACCESS_KEY=${{AWS_SECRET_ACCESS_KEY}}
#      when:
#        branch:
#          only:
#            - master
